app Atheismonmoon {
  wasp: {
    version: "^0.11.1"
  },
  title: "Atheismonmoon",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id          Int          @id @default(autoincrement())
    username    String       @unique
    password    String
    debates     Debate[]
    Progress    Progress?
    Preferences Preferences?
psl=}

entity Debate {=psl
    id               Int    @id @default(autoincrement())
    user             User   @relation(fields: [userId], references: [id])
    userId           Int
    debateTranscript String
    aiDebaterType    String
psl=}

entity Progress {=psl
    id                 Int    @id @default(autoincrement())
    user               User   @relation(fields: [userId], references: [id])
    userId             Int    @unique
    understandingLevel String
    engagementScore    Int
psl=}

entity Preferences {=psl
    id            Int    @id @default(autoincrement())
    user          User   @relation(fields: [userId], references: [id])
    userId        Int    @unique
    aiAppearance  String
    aiPersonality String
    aiBackground  String
psl=}

action createDebate {
  fn: import { createDebate } from "@server/actions.js",
  entities: [User, Debate]
}

action updateProgress {
  fn: import { updateProgress } from "@server/actions.js",
  entities: [User, Progress]
}

action customizeAI {
  fn: import { customizeAI } from "@server/actions.js",
  entities: [User, Preferences]
}

query getDebates {
  fn: import { getDebates } from "@server/queries.js",
  entities: [User, Debate]
}

query getProgress {
  fn: import { getProgress } from "@server/queries.js",
  entities: [User, Progress]
}

query getPreferences {
  fn: import { getPreferences } from "@server/queries.js",
  entities: [User, Preferences]
}

route DebateRoute { path: "/debate", to: DebatePage }
page DebatePage {
  component: import { Debate } from "@client/pages/Debate.jsx",
  authRequired: true
}

route ProgressRoute { path: "/progress", to: ProgressPage }
page ProgressPage {
  component: import { Progress } from "@client/pages/Progress.jsx",
  authRequired: true
}

route PreferencesRoute { path: "/preferences", to: PreferencesPage }
page PreferencesPage {
  component: import { Preferences } from "@client/Preferences.jsx",
  authRequired: true
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}
